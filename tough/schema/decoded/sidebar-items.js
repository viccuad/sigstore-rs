initSidebarItems({"struct":[["Decoded","A wrapper around a `Vec<u8>` that contains bytes decoded from an original type `T` (e.g. hex-encoded bytes or a PEM-encoded public key). The original encoded `T` is also stored so it can be used during serialization to verify signatures."],["EcdsaFlex","[`Decode`]/[`Encode`] implementation for ECDSA public keys. This is a flexible implementation, it will try to decode the key assuming it is PEM encoded, if the decode fails it will then try to decode it assuming itâ€™s Hex encoded. The official TUF specification suggests ECDSA keys to be PEM encoded, however the go-tuf implementation encodes them as Hex numbers. This flexible decoder tries to cover both cases in a transparent way."],["EcdsaPem","[`Decode`]/[`Encode`] implementation for PEM-encoded ECDSA public keys."],["Hex","[`Decode`]/[`Encode`] implementation for hex-encoded strings."],["RsaPem","[`Decode`]/[`Encode`] implementation for PEM-encoded RSA public keys."]],"trait":[["Decode","A trait that represents how data can be converted from a string to bytes."],["Encode","A trait that represents how data can be converted from bytes to a string."]]});